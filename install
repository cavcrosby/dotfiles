#!/bin/bash
# Small setup script for dotfiles repo.
# Usage: curl https://raw.githubusercontent.com/reap2sow1/dotfiles/main/install | bash
set -e
PWD="$(pwd)"
PROGRAM_NAME="install"
BASHRC_FILE_NAME=".bashrc" # assuming .bashrc is ALWAYS '.bashrc'
TEMP_DIR_NAME="${PROGRAM_NAME}-temp"
BASHRC_REMOTE_URL='https://raw.githubusercontent.com/reap2sow1/dotfiles/main/.bashrc'
DOTFILES_TO_INCLUDE_FOR_LINKING=(
    .bashrc
)

if [ "$PWD" != "$HOME" ]; then
    # main reason is to avoid filemode permissions
    echo "${PROGRAM_NAME}: Re-run this script in $HOME (assuming you haven't changed this!), to run this correctly"
    exit 1
fi

# shellcheck disable=2034
read -r -e -p "Is this a reinstall, y/n? (n) " RE_INSTALL_REPLY

mkdir "$TEMP_DIR_NAME" || exit 1
cd "$TEMP_DIR_NAME" || exit 1

[[ -n "$(which wget)" ]] || echo "${PROGRAM_NAME}: wget cannot be found on the PATH!" && exit 1
if ! wget --quiet "$BASHRC_REMOTE_URL"; then
    echo "${PROGRAM_NAME}: Could not fetch .bashrc from url!"
    exit 1
fi
# shellcheck disable=SC1090
source "./${BASHRC_FILE_NAME}"
rm "./${BASHRC_FILE_NAME}"
cd ..
rmdir "$TEMP_DIR_NAME"

if ! [ -d "$GIT_REPOS_PATH" ]; then 
    mkdir "$GIT_REPOS_PATH"
fi

LOCAL_REPO_PATH="${GIT_REPOS_PATH}/${DOTFILES_REPO_NAME}"

# using parameter expansion, ',,' append will convert the string to lowercase
if [ "${RE_INSTALL_REPLY,,}" == "y" ]; then
    if ! [ -d "$LOCAL_REPO_PATH" ]; then
        echo "$ERROR the $DOTFILES_REPO_NAME cannot be found, its possible remote $BASHRC_FILE_NAME has changed recently"
        exit 1
    fi
    rm -rf "$LOCAL_REPO_PATH"
fi

git clone --quiet "$DOTFILES_REMOTE_REPO_URL" "$LOCAL_REPO_PATH" > /dev/null
# it is assumed all dotfiles will exist in the same directory (e.g. $HOME)
for dotfile in "${DOTFILES_TO_INCLUDE_FOR_LINKING[@]}"; do
    ln -sf "$LOCAL_REPO_PATH/$dotfile" "./$dotfile"
done

echo -e "$SUCCESS 'install' was successfull! Restart your shell session to pull in new configurations"
